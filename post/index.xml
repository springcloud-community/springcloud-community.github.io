<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Spring Cloud</title>
    <link>https://www.springcloud.io/post/</link>
    <description>Recent content in Posts on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 31 Mar 2022 19:16:46 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Framework RCE, Early Announcement</title>
      <link>https://www.springcloud.io/post/2022-03/spring-framework-rce-early-announcement/</link>
      <pubDate>Thu, 31 Mar 2022 19:16:46 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-framework-rce-early-announcement/</guid>
      <description>Update 12:11 BST: A minor issue in the workaround with adding to the disallowedFields array has been fixed.
Update 11:59 BST: Spring Framework versions 5.3.18 and 5.2.20 , which address the vulnerability, are now available on Maven Central. The release process for Spring Boot is in progress,but applications can already upgrade their Spring Framework version independently in order to be protected.
I would like to acknowledge an RCE vulnerability in the Spring Framework that does not have a published CVE report yet.</description>
    </item>
    
    <item>
      <title>Spring cache source code analysis</title>
      <link>https://www.springcloud.io/post/2022-03/spring-cache-source-code-analysis/</link>
      <pubDate>Thu, 31 Mar 2022 18:02:46 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-cache-source-code-analysis/</guid>
      <description>Spring cache is a caching API layer that encapsulates common operations for a variety of caches and can easily add caching functionality to your application with the help of annotations. The common annotations are @Cacheable, @CachePut, @CacheEvict, ever wondered what is the principle behind them? With questions, after reading the source code of Spring cache, make a brief summary. First the conclusion, the core logic in the CacheAspectSupport class ,</description>
    </item>
    
    <item>
      <title>Complete Guide to Spring RestTemplate</title>
      <link>https://www.springcloud.io/post/2022-03/spring-resttemplate/</link>
      <pubDate>Thu, 31 Mar 2022 17:53:46 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-resttemplate/</guid>
      <description>REST-styled APIs are all around us. Many applications need to invoke REST APIs for some or all of their functions. Hence for applications to function gracefully, they need to consume APIs elegantly and consistently.
RestTemplate is a class within the Spring framework that helps us to do just that. In this tutorial, we will understand how to use RestTemplate for invoking REST APIs of different shapes.
Example Code This article is accompanied by a working code example on GitHub.</description>
    </item>
    
    <item>
      <title>Spring Cloud Azure 4.0 is Now Generally Available</title>
      <link>https://www.springcloud.io/post/2022-03/spring-cloud-azure-4-0-is-now-generally-available/</link>
      <pubDate>Wed, 30 Mar 2022 16:30:14 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-cloud-azure-4-0-is-now-generally-available/</guid>
      <description>NOTE: Hi, Spring fans! This is a guest post from Sean Li, our friend at Microsoft
 I am pleased to announce that Spring Cloud Azure 4.0 is now generally available. With this major release we aim to bring better security, leaner dependencies, support for production readiness and more. Version 4 represents a significant milestone in our product roadmap that we couldn&amp;rsquo;t have delivered without the collective wisdom of the Spring community and customer feedback.</description>
    </item>
    
    <item>
      <title>Add Prefix to All Spring Boot Controllers</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-controllers-add-prefix/</link>
      <pubDate>Wed, 30 Mar 2022 16:22:52 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-controllers-add-prefix/</guid>
      <description>1. Introduction In Spring Boot applications, every controller can have its own URL mapping. This makes it easy for a single application to provide web endpoints at multiple locations. For example, we can group our API endpoints into logic groupings such as internal and external.
However, there may be times where we want all of our endpoints under a common prefix. In this tutorial, we&amp;rsquo;ll look at different ways to use a common prefix for all Spring Boot controllers.</description>
    </item>
    
    <item>
      <title>About Spring Core Spring Beans Remote Code Warning Notice for Execution 0day Vulnerability</title>
      <link>https://www.springcloud.io/post/2022-03/spring-0day-vulnerability/</link>
      <pubDate>Wed, 30 Mar 2022 10:06:26 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-0day-vulnerability/</guid>
      <description>Information indicates that an RCE 0day vulnerability has been reported in the Spring Framework. If the target system is developed using Spring and has a JDK version above JDK9, an unauthorized attacker can exploit this vulnerability to remotely execute arbitrary code on the target device.
1. Vulnerability Situation Analysis The Spring framework is the most widely used lightweight open source framework for Java, and in the JDK9 version of the Spring framework (and above), a remote attacker can obtain an AccessLogValve object through the framework&amp;rsquo;s parameter binding feature and use malicious field values to trigger the pipeline mechanism and write to a file in an arbitrary path if certain conditions are met.</description>
    </item>
    
    <item>
      <title>Getting Started With GraphQL SPQR and Spring Boot</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-graphql/</link>
      <pubDate>Tue, 29 Mar 2022 17:24:15 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-graphql/</guid>
      <description>1. Introduction GraphQL is a query and manipulation language for web APIs. One of the libraries that originated to make working with GraphQL more seamless is SPQR.
In this tutorial, we&amp;rsquo;ll learn the basics of GraphQL SPQR and see it in action in a simple Spring Boot project.
2. What Is GraphQL SPQR? GraphQL is a well-known query language created by Facebook. At its core are schemas - files in which we define custom types and functions.</description>
    </item>
    
    <item>
      <title>Exposing a Helpful Info Endpoint with Spring Boot Actuator</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-info-endpoint/</link>
      <pubDate>Tue, 29 Mar 2022 15:47:28 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-info-endpoint/</guid>
      <description>In a distributed, fast-paced environment, dev teams often want to find out at what time they deployed the app, what version of the app they deployed, what Git commit was deployed, and more.
Spring Boot Actuator helps us monitor and manage the application. It exposes various endpoints that provide app health, metrics, and other relevant information.
In this article, we will find out how to use Spring Boot Actuator and the Maven/Gradle build plugins to add such information to our projects.</description>
    </item>
    
    <item>
      <title>Getting Started With Spring Webflux</title>
      <link>https://www.springcloud.io/post/2022-03/getting-started-with-spring-webflux/</link>
      <pubDate>Tue, 29 Mar 2022 15:30:40 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/getting-started-with-spring-webflux/</guid>
      <description>Most traditional applications deal with blocking calls or, in other words, synchronous calls. This means that if we want to access a particular resource in a system with most of the threads being busy, then the application would block the new one or wait until the previous threads complete processing its requests.
If we want to process Big Data , however, we need to do this with immense speed and agility.</description>
    </item>
    
    <item>
      <title>CVE report published for Spring Framework</title>
      <link>https://www.springcloud.io/post/2022-03/cve-report-published-for-spring-framework/</link>
      <pubDate>Mon, 28 Mar 2022 21:50:39 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/cve-report-published-for-spring-framework/</guid>
      <description>We have released Spring Framework 5.3.17 to address the following CVE report.
 CVE-2022-22950: Spring Expression DoS Vulnerability  Please review the information in the CVE report and upgrade immediately.
Spring Boot users should upgrade to 2.5.11 or 2.6.5.
CVE-2022-22950: Spring Expression DoS Vulnerability   Severity
Medium
  Vendor
Spring by VMware
  Description
In Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</description>
    </item>
    
    <item>
      <title>Resilience and Best Patterns</title>
      <link>https://www.springcloud.io/post/2022-03/resilience-and-best-patterns/</link>
      <pubDate>Mon, 28 Mar 2022 19:50:05 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/resilience-and-best-patterns/</guid>
      <description>Monolithic solutions or solutions where a single point of failure can derail an operation is a big problem. In products and platforms that target availability as an essential feature, this problem ends up creating major engineering challenges. This difficulty can be solved with a Microservices architecture. This architecture aims to: Make processes independent and managed in a unique way and without interdependence, so responsibilities are divided and decentralized, something very common in a distributed computing pattern.</description>
    </item>
    
    <item>
      <title>Logging MongoDB Queries with Spring Boot</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-mongodb-logging/</link>
      <pubDate>Mon, 28 Mar 2022 15:37:23 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-mongodb-logging/</guid>
      <description>1. Overview When using Spring Data MongoDB, we may need to log to a higher level than the default one. Typically, we may need to see, for example, some additional information such as statement executions or query parameters.
In this short tutorial, we&amp;rsquo;ll see how to modify the MongoDB logging level for queries.
2. Configure MongoDB Queries Logging MongoDB Support offers the MongoOperations interface or its primary MongoTemplate implementation to access data, so all we need is to configure a debug level for the MongoTemplate class.</description>
    </item>
    
    <item>
      <title>Send multipart/form-data requests using Resttemplate</title>
      <link>https://www.springcloud.io/post/2022-03/resttemplate-multipart/</link>
      <pubDate>Mon, 28 Mar 2022 15:14:27 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/resttemplate-multipart/</guid>
      <description>A multipart/form-data request can contain multiple sub-request bodies, each with its own separate header and body. Each sub-request body has its own separate header and body, and is typically used for file uploads. Here we use RestTemplate to send a multipart/form-data request.
RestTemplate It&amp;rsquo;s really simple, it&amp;rsquo;s all in the code.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  package io.</description>
    </item>
    
    <item>
      <title>Packaging SpringBoot applications with Docker</title>
      <link>https://www.springcloud.io/post/2022-03/springboot-docker/</link>
      <pubDate>Sat, 26 Mar 2022 17:39:32 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/springboot-docker/</guid>
      <description>Previously, we used Docker to build services related to the development environment, and also to build dependency services in the development and testing environment, and then also used Nexus to build Docker&amp;rsquo;s self-service, so this time we came together to deploy SpringBoot applications with Docker. Step by step to all the Dockerization march.
Build SpringBoot project The project is relatively simple, no data interaction, no complex business, just a print statement.</description>
    </item>
    
    <item>
      <title>Spring Authorization Server 0 2 3 Available Now</title>
      <link>https://www.springcloud.io/post/2022-03/spring-authorization-server-0-2-3-available-now/</link>
      <pubDate>Fri, 25 Mar 2022 08:45:15 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-authorization-server-0-2-3-available-now/</guid>
      <description>⭐ New Features  Apply default settings for public client type #656 Decompose OAuth2ClientAuthenticationProvider #655 Optimize InMemoryOAuth2AuthorizationService #654 Federated Identity sample #641 Use OAuth2TokenGenerator for OAuth2AuthorizationCode #639 Add OAuth2TokenGenerator implementation for OAuth2RefreshToken #638 Allow Token Introspection to be customized #630 Introduce OAuth2TokenGenerator #628 Add Assert.notNull() for AuthenticationProvider additions #530 Support opaque access tokens #500 Allow Token Introspection to be customized #493 Seperate JWT Token generation #414 Add a login with Google Authorization Server Sample #106  🐞 Bug Fixes  Dynamic client registration should not generate client_secret for private_key_jwt #657 /.</description>
    </item>
    
    <item>
      <title>Spring Boot 2.6.5 Available Now</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-2-6-5-available-now/</link>
      <pubDate>Fri, 25 Mar 2022 08:41:32 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-2-6-5-available-now/</guid>
      <description>⭐ New Features  Add EIGHTEEN to JavaVersion enum #30132  🐞 Bug Fixes  ConfigurationPropertyName#equals is not symmetric when adapt has removed trailing characters from an element #30392 Thymeleaf auto-configuration in a reactive application can fail due to duplicate templateEngine beans #30385 server.tomcat.keep-alive-timeout is not applied to HTTP/2 #30321 Setting spring.mustache.enabled to false has no effect #30256 bootWar is configured eagerly #30213 Actuator @ReadOperation on Flux cancels request after first element emitted #30161 Unnecessary allocations in Prometheus scraping endpoint #30125 No metrics are bound for R2DBC ConnectionPools that have been wrapped #30100 Condition evaluation report entry for a @ConditionalOnSingleCandidate that does not match due to multiple primary beans isn&amp;rsquo;t as clear as it could be #30098 Generated password are logged without an &amp;ldquo;unsuitable for production use&amp;rdquo; note #30070 Dependency management for Netty tcNative is incomplete leading to possible version conflicts #30038 Files in META-INF are not found when deploying a Gradle-built executable war to a servlet container #30036 Dependency management for Apache Kafka is incomplete #30031 spring-boot-configuration-processor fails compilation due to @DefaultValue with a long value and generates invalid metadata for byte and short properties with out-of-range default values #30022  📔 Documentation  Add Apache Kafka to the description of the Messaging section #30389 Default value of spring.</description>
    </item>
    
    <item>
      <title>Building Native Images with GraalVM and Spring Native on Apple&#39;s M1 Architecture</title>
      <link>https://www.springcloud.io/post/2022-03/graalvm-spring-native/</link>
      <pubDate>Thu, 24 Mar 2022 17:46:09 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/graalvm-spring-native/</guid>
      <description>It finally happened! They did it! They did it just in time for me to get on the road and start building applications on the road with my shiny new laptop, too! JOY!! Oracle and the GraalVM team released GraalVM and the GraalVM native image capability for Apple M1! I&amp;rsquo;ve been waiting for this day for so, so, so long! I bought the first Apple M1 the day of the announcement way back in 2020 (does anybody remember that far back?</description>
    </item>
    
    <item>
      <title>Notes on RabbitMQ with Spring Boot</title>
      <link>https://www.springcloud.io/post/2022-03/notes-rabbitmq-spring-boot/</link>
      <pubDate>Wed, 23 Mar 2022 10:22:06 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/notes-rabbitmq-spring-boot/</guid>
      <description>Introduction Suppose our application organizes asynchronous domain logic inside DomainEventListener&amp;rsquo;s like the following code snippet.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  interface DomainEventListener { val topic: String fun handle(event: DomainEvent) } @Component class UserRegistered: DomainEventListener { override val topic = &amp;#34;user:registered&amp;#34; // How deserialization is performed is left out.  override fun handle(event: DomainEvent) { // perform business logic  } }   This post shows how to integrate these listeners with Spring AMQP by taking advantage of Spring&amp;rsquo;s infrastructure.</description>
    </item>
    
    <item>
      <title>Moving from Spring Cloud Netflix Zuul to Spring Cloud Gateway</title>
      <link>https://www.springcloud.io/post/2022-03/netflix-zuul-to-spring-cloud-gateway/</link>
      <pubDate>Tue, 22 Mar 2022 16:18:01 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/netflix-zuul-to-spring-cloud-gateway/</guid>
      <description>I&amp;rsquo;ve been using Netflix Zuul for many years as a proxy for APIs. Some weeks ago I tried to bootstrap a new project and add the zuul starter via spring initializr and couldn&amp;rsquo;t find it anymore. After some research it seems that Spring Cloud has moved over to Cloud Gateway and discontinued Netflix Zuul. Maybe this was just a rebranding of the Spring team but tbh I don&amp;rsquo;t care and want to follow the Spring Cloud team with that.</description>
    </item>
    
    <item>
      <title>Spring Security without the WebSecurityConfigurerAdapter</title>
      <link>https://www.springcloud.io/post/2022-03/spring-security-without-the-websecurityconfigureradapter/</link>
      <pubDate>Tue, 22 Mar 2022 10:27:35 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-security-without-the-websecurityconfigureradapter/</guid>
      <description>In Spring Security 5.7.0-M2 we deprecated the WebSecurityConfigurerAdapter , as we encourage users to move towards a component-based security configuration.
To assist with the transition to this new style of configuration, we have compiled a list of common use-cases and the suggested alternatives going forward.
In the examples below we follow best practice by using the Spring Security lambda DSL and the method HttpSecurity#authorizeHttpRequests to define our authorization rules. If you are new to the lambda DSL you can read about it in this blog post.</description>
    </item>
    
  </channel>
</rss>
