<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>resilience on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/resilience/</link>
    <description>Recent content in resilience on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Mar 2022 19:50:05 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/resilience/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resilience and Best Patterns</title>
      <link>https://www.springcloud.io/post/2022-03/resilience-and-best-patterns/</link>
      <pubDate>Mon, 28 Mar 2022 19:50:05 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/resilience-and-best-patterns/</guid>
      <description>Monolithic solutions or solutions where a single point of failure can derail an operation is a big problem. In products and platforms that target availability as an essential feature, this problem ends up creating major engineering challenges. This difficulty can be solved with a Microservices architecture. This architecture aims to: Make processes independent and managed in a unique way and without interdependence, so responsibilities are divided and decentralized, something very common in a distributed computing pattern.</description>
    </item>
    
  </channel>
</rss>
