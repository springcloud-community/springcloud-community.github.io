<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hystrix on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/hystrix/</link>
    <description>Recent content in hystrix on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Jan 2022 17:11:47 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/hystrix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solve the problem that RequestContextHolder.getRequestAttributes() returns null due to hystrix isolation policy</title>
      <link>https://www.springcloud.io/post/2022-01/hystrix/</link>
      <pubDate>Mon, 10 Jan 2022 17:11:47 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-01/hystrix/</guid>
      <description>What is the Hystrix Isolation Policy? Official documentation: https://github.com/Netflix/Hystrix/wiki/Configuration#executionisolationstrategy
Executing an isolation policy This property instructs HystrixCommand.run() which isolation policy to execute, being one of the following two options.
 THREAD - it is executed on a separate thread, and concurrent requests are limited by the number of threads in the thread pool SEMAPHORE - it is executed on the calling thread, and concurrent requests are limited by the amount of semaphore  Problem When the isolation policy is THREAD, there is no way to get the value in ThreadLocal.</description>
    </item>
    
    <item>
      <title>Spring Cloud Gateway Hystrix</title>
      <link>https://www.springcloud.io/post/2021-12/spring-cloud-gateway-hystrix/</link>
      <pubDate>Sat, 04 Dec 2021 15:55:27 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/spring-cloud-gateway-hystrix/</guid>
      <description>In the microservice architecture, if the downstream dependency problem occurs, if the upstream caller does not do request degradation processing, the downstream abnormal dependency is not isolated, it is likely that one or two services or as small as one or two interface abnormalities lead to the unavailability of all upstream services, or even affect the whole business line. The mainstream request degradation processing is still the Hystrix from Netfilx.</description>
    </item>
    
  </channel>
</rss>
