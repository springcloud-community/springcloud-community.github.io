<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/mysql/</link>
    <description>Recent content in mysql on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Mar 2022 16:54:51 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot Integration Testing MySQL CRUD REST API Tutorial</title>
      <link>https://www.springcloud.io/post/2022-03/spring-boot-integration-testing-mysql-crud-rest-api-tutorial/</link>
      <pubDate>Wed, 16 Mar 2022 16:54:51 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-boot-integration-testing-mysql-crud-rest-api-tutorial/</guid>
      <description>In this tutorial, we will learn how to perform Integration testing Spring boot application using @SpringBootTest annotation.
We use MySQL database to store and retrieve the data.
Let&amp;rsquo;s first take a look at the overview of @SpringBootTest annotation.
@SpringBootTest Annotation Spring Boot provides @SpringBootTest annotation for Integration testing. This annotation creates an application context and loads the full application context.
@SpringBootTest will bootstrap the full application context, which means we can @Autowire any bean that&amp;rsquo;s picked up by component scanning into our test.</description>
    </item>
    
    <item>
      <title>Using commons-exec to backup MYSQL database in spring boot application</title>
      <link>https://www.springcloud.io/post/2022-03/commons-exec-backup-database/</link>
      <pubDate>Sat, 12 Mar 2022 14:33:58 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/commons-exec-backup-database/</guid>
      <description>mysqldump is a database backup program provided by mysql. It dumps the data stored in the database into SQL statements that are output to standard output.
Basic Usage:
1  mysqldump -u[username] -p[password] [database] &amp;gt; [sql file]    The &amp;gt; symbol is a redirector under linux, redirecting the standard output to a file.
 mysqldump You can refer to the official documentation for more detailed usage.
Use in spring boot applications Start a new subprocess via commons-exec to execute mysqldump to complete the backup.</description>
    </item>
    
    <item>
      <title>Spring Boot Quick Integration With Mybatis Framework</title>
      <link>https://www.springcloud.io/post/2022-03/springboot-mybatis-mysql/</link>
      <pubDate>Thu, 10 Mar 2022 17:05:59 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/springboot-mybatis-mysql/</guid>
      <description>Mybatis is a popular orm framework. It can maintain SQL statements in XML and is very flexible. This is the key for many developers to choose it as an orm framework.
  Official Website: https://mybatis.org/mybatis-3/
  Github: https://github.com/mybatis/mybatis-3
  Mvnrepository: https://mvnrepository.com/artifact/org.mybatis/mybatis
1 2 3 4 5 6  &amp;lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;     Using mybatis in spring boot applications is easy.</description>
    </item>
    
  </channel>
</rss>
