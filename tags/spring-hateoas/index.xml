<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-hateoas on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/spring-hateoas/</link>
    <description>Recent content in spring-hateoas on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 May 2022 13:54:13 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/spring-hateoas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot With Spring Hateoas</title>
      <link>https://www.springcloud.io/post/2022-05/springboot-hateoas/</link>
      <pubDate>Thu, 12 May 2022 13:54:13 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-05/springboot-hateoas/</guid>
      <description>HATEOAS is a principle to achieve the REST specification, by following the HATEOAS specification, we can solve the actual code to achieve a variety of individual problems. As the most popular framework for java Spring will of course not be absent from the integration of HATEOAS.
This article will explain how to use HATEOAS in SpringBoot through a specific example.
Our goal The HATEOAS rule returns data with links. Let&amp;rsquo;s take the familiar Book example to demonstrate this HATEOAS by first creating a Book entity.</description>
    </item>
    
    <item>
      <title>Pagination(with Hateoas), Filtering &amp; Sorting with Spring Boot and JPA</title>
      <link>https://www.springcloud.io/post/2022-04/hateoas-spring-boot-and-jpa/</link>
      <pubDate>Sat, 09 Apr 2022 14:17:48 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-04/hateoas-spring-boot-and-jpa/</guid>
      <description>Introduction In this blog post we are going to look at how we can implement pagination with hateoas while supporting filtering and sorting in a spring boot application. We will first start off implementing filtering, and then iteratively page, sorting and finally pagination wtih Hateoas.
Tech Stack Below are the list of languages, frameworks and libraries used in this tutorial
 Java 11 Maven h2 in memory database REST apis SpringBoot 2.</description>
    </item>
    
  </channel>
</rss>
