<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-cloud-config on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/spring-cloud-config/</link>
    <description>Recent content in spring-cloud-config on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Mar 2022 14:46:05 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/spring-cloud-config/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Cloud Config Server - Encryption and Decryption</title>
      <link>https://www.springcloud.io/post/2022-03/spring-cloud-config-server-encryption-and-decryption/</link>
      <pubDate>Thu, 17 Mar 2022 14:46:05 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-cloud-config-server-encryption-and-decryption/</guid>
      <description>While using Spring Cloud Config Server, we also have the feature to encrypt sensitive information that is otherwise stored as plain text in our external git repository. This prevents anyone who has read access to the external repository from accessing confidential information and is highly highly recommended if you are using a Spring Cloud Config Server.
 Note: If you haven&amp;rsquo;t set up Spring Cloud Config Server yet check out my other article on how to set up a spring cloud config server.</description>
    </item>
    
    <item>
      <title>Spring Cloud Config Server: Step by Step</title>
      <link>https://www.springcloud.io/post/2022-03/spring-cloud-config-server-step-by-step/</link>
      <pubDate>Thu, 17 Mar 2022 14:30:41 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-03/spring-cloud-config-server-step-by-step/</guid>
      <description>Spring Cloud Config Server is used to provide server-side and client-side support for externalized configuration in a distributed system. So when you have multiple microservices, and you want to easily control the configuration for all of them at one go - you&amp;rsquo;ll mostly be looking at Spring Cloud Config Server.
So how do we do this? We will create a git project which contains all your properties files for the multiple microservices that you have (easy enough).</description>
    </item>
    
    <item>
      <title>External Configuration in Microservices: Spring Cloud Config</title>
      <link>https://www.springcloud.io/post/2021-12/external-configuration-in-microservices-spring-cloud-config/</link>
      <pubDate>Tue, 21 Dec 2021 08:39:30 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/external-configuration-in-microservices-spring-cloud-config/</guid>
      <description>Let’s take a look at the overall microservice architecture that we have built as part of this spring cloud series.
If you have not followed this Spring Cloud series from the beginning, check this index page and bookmark it if needed — Spring Cloud Tutorials.
Why Spring Cloud Config? When we build a service, there are many values that we don’t want to hardcode and rather read from property files, for instance, endpoints, encrypted values, etc.</description>
    </item>
    
    <item>
      <title>Getting started with Spring Cloud Config</title>
      <link>https://www.springcloud.io/post/2021-12/getting-started-with-spring-cloud-config/</link>
      <pubDate>Thu, 09 Dec 2021 16:33:11 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/getting-started-with-spring-cloud-config/</guid>
      <description>Spring Cloud provides tools for developers to quickly build some of the common patterns in distributed systems. Coordination of distributed systems leads to boilerplate patterns, and using Spring Cloud developers can quickly run services and applications that implement those patterns. They will work well in any distributed environment, including the developer’s laptop, bare metal data centers, and managed platforms such as Cloud Foundry.
In this article, I would like to discuss Spring Cloud Config.</description>
    </item>
    
    <item>
      <title>Spring Cloud Config Server - Encryption and Decryption</title>
      <link>https://www.springcloud.io/post/2021-12/spring-cloud-config-server-encryption-and-decryption-2ejc/</link>
      <pubDate>Thu, 09 Dec 2021 16:16:35 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/spring-cloud-config-server-encryption-and-decryption-2ejc/</guid>
      <description>While using Spring Cloud Config Server, we also have the feature to encrypt sensitive information that is otherwise stored as plain text in our external git repository. This prevents anyone who has read access to the external repository from accessing confidential information and is highly highly recommended if you are using a Spring Cloud Config Server. Note: If you haven&amp;rsquo;t set up Spring Cloud Config Server yet check out my other article on how to set up a spring cloud config server.</description>
    </item>
    
    <item>
      <title>Spring Cloud Config Server: Step by Step</title>
      <link>https://www.springcloud.io/post/2021-12/spring-cloud-config-server-step-by-step-14fd/</link>
      <pubDate>Tue, 07 Dec 2021 22:13:30 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/spring-cloud-config-server-step-by-step-14fd/</guid>
      <description>Spring Cloud Config Server is used to provide server-side and client-side support for externalized configuration in a distributed system. So when you have multiple microservices, and you want to easily control the configuration for all of them at one go - you&amp;rsquo;ll mostly be looking at Spring Cloud Config Server.
So how do we do this? We will create a git project which contains all your properties files for the multiple microservices that you have (easy enough).</description>
    </item>
    
  </channel>
</rss>
