<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>microservice on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/microservice/</link>
    <description>Recent content in microservice on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Apr 2022 08:52:03 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/microservice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What are microservices?</title>
      <link>https://www.springcloud.io/post/2022-04/microservice/</link>
      <pubDate>Fri, 29 Apr 2022 08:52:03 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-04/microservice/</guid>
      <description>Microservice is a software architecture that is gaining more and more attention.
But what does it really mean? What kind of architecture can be called microservices?
There are many articles on the Internet, but they are too complicated for beginners to understand. In my opinion, the concept is actually very simple and can be understood in layman&amp;rsquo;s terms.
1. Monolithic Software To understand microservices, you first need to understand the evolution of software architecture.</description>
    </item>
    
    <item>
      <title>Summary of refactoring a standalone application to Spring Cloud microservices</title>
      <link>https://www.springcloud.io/post/2022-01/standalone-2-microservice/</link>
      <pubDate>Wed, 12 Jan 2022 21:10:25 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-01/standalone-2-microservice/</guid>
      <description>Spent a few days to transform the project from Spring Boot monolithic project into Spring Cloud microservices. To be honest, the current volume of business is far from microservices, standalone can completely hold. But can not help the leadership above the daily urging, forget it, let&amp;rsquo;s do it.
The hardest part is not the technology The most time consuming part of switching from standalone to microservices is not in the technology upgrade.</description>
    </item>
    
  </channel>
</rss>
