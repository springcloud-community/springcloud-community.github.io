<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jackson on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/jackson/</link>
    <description>Recent content in jackson on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 May 2022 17:35:33 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/jackson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot With Gson</title>
      <link>https://www.springcloud.io/post/2022-05/springboot-gson/</link>
      <pubDate>Wed, 04 May 2022 17:35:33 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-05/springboot-gson/</guid>
      <description>Spring Boot uses Jackson by default as the serialization/deserialization framework for Json. But for me, I prefer Google&amp;rsquo;s Gson, which is much more concise. This article will teach you how to use Gson instead of Jackson in your Spring Boot application.
maven Spring Boot itself provides support for Gson, so you can import the Gson module directly without declaring a version number. If you are not using Jackson elsewhere, then you can exclude it from your project.</description>
    </item>
    
  </channel>
</rss>
