<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/docker/</link>
    <description>Recent content in docker on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 13 Feb 2022 14:35:53 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimize Spring Boot application Docker images to improve CI/CD efficiency</title>
      <link>https://www.springcloud.io/post/2022-02/docker-layer-spring-boot/</link>
      <pubDate>Sun, 13 Feb 2022 14:35:53 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-02/docker-layer-spring-boot/</guid>
      <description>More and more projects are containerized and Docker has become an important tool in software development. We can usually package the fat jar of a Spring Boot application as a docker image with the following Dockerfile. 1 2 3 4 5 FROMadoptopenjdk:8-jre-hotspotARG JAR_FILE=target/*.jarCOPY ${JAR_FILE} app.jarEXPOSE8080ENTRYPOINT [&amp;#34;java&amp;#34;,&amp;#34;-jar&amp;#34;,&amp;#34;/app.jar&amp;#34;] It looks good, but you will find that if we change the business code, the image will be rebuilt, even if you just change</description>
    </item>
    
    <item>
      <title>Spring Boot Containerization via Docker</title>
      <link>https://www.springcloud.io/post/2022-02/spring-docker-ex/</link>
      <pubDate>Fri, 11 Feb 2022 21:43:05 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2022-02/spring-docker-ex/</guid>
      <description>Recently the company&amp;rsquo;s application ready to containerize, because dozens of applications from testing to release is too much trouble, and also because of environmental factors lead to a variety of problems in the deployment. In order to maintain a consistent environment in development, testing, production, the introduction of container technology, first take the edge of the project to try, to gain experience. Today a brief summary of several common Docker</description>
    </item>
    
  </channel>
</rss>
