<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-cloud-schema-registry-client on Spring Cloud</title>
    <link>https://www.springcloud.io/tags/spring-cloud-schema-registry-client/</link>
    <description>Recent content in spring-cloud-schema-registry-client on Spring Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 10 Dec 2021 16:51:17 +0800</lastBuildDate><atom:link href="https://www.springcloud.io/tags/spring-cloud-schema-registry-client/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Cloud Stream with Schema Registry and Kafka</title>
      <link>https://www.springcloud.io/post/2021-12/spring-cloud-stream-with-schema-registry-and-kafka/</link>
      <pubDate>Fri, 10 Dec 2021 16:51:17 +0800</pubDate>
      
      <guid>https://www.springcloud.io/post/2021-12/spring-cloud-stream-with-schema-registry-and-kafka/</guid>
      <description>In this article, you will learn how to use Confluent Schema Registry with Spring Cloud Stream and Kafka in a microservices architecture. We will use Apache Avro to serialize and deserialize events exchanged between our applications. Spring Cloud Stream provides a handy mechanism for integration with Kafka and schema registry.
Ok, but before we start, letâ€™s say some words about schema registry. What is this? And why we may use it in our event-driven architecture?</description>
    </item>
    
  </channel>
</rss>
